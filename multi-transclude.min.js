!function(){"use strict";var n=angular.module("multi-transclude",[]),e=["$scope","$element","$transclude",function(n,e,t){if(!t)throw new Error("Illegal use of ngMultiTransclude controller. No directive that requires a transclusion found.");this.$element=e,this.isChildOf=function(n){return n.$element[0].contains(this.$element[0])};var r;n.$on("$destroy",function(){r&&(r.remove(),r=null)});var l=angular.element('<div style="display:none;"></div>');this.transclude=function(n,e){for(var t=0;t<r.length;++t){var l=angular.element(r[t]);if(l.attr("name")===n)return e.empty(),void e.append(l)}},this.transcluded=function(){l&&(l.remove(),l=null)},t(function(n){r=n,l.append(n),e.append(l)})}];e.$inject=["$scope","$element","$transclude"],n.directive("ngMultiTemplate",function(){return{transclude:!0,templateUrl:function(n,e){return e.ngMultiTemplate},controller:e,link:function(n,e,t,r){r.transcluded()}}}),n.directive("ngMultiTranscludeController",function(){return{controller:e,link:function(n,e,t,r){r.transcluded()}}}),n.directive("ngMultiTransclude",function(){return{require:["?^ngMultiTranscludeController","?^ngMultiTemplate"],link:function(n,e,t,r){var l,i=r[0],u=r[1];if(l=i&&u?i.isChildOf(u)?i:u:i||u,!l)throw new Error("Illegal use of ngMultiTransclude. No wrapping controller.");l.transclude(t.ngMultiTransclude,e)}}})}();